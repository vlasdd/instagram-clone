{"version":3,"file":"static/js/33.dc242d3d.chunk.js","mappings":"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","sources":["components/header/Header.tsx","components/header/components/profile-drop-menu/ProfileDropMenuElement.tsx","svgs/empty/Profile.tsx","components/header/components/profile-drop-menu/ProfileDropMenuContainer.tsx","components/header/components/search/UserSearchElement.tsx","components/header/components/search/UsersSearchDropMenu.tsx","svgs/both/Home.tsx","svgs/empty/Search.tsx","components/header/components/search/SearchBar.tsx","svgs/both/NewPost.tsx","components/header/components/new-post-modal/NewPostModalOne.tsx","svgs/empty/ReturnBack.tsx","components/header/components/new-post-modal/NewPostModalTwo.tsx","components/header/components/new-post-modal/NewPostModal.tsx","svgs/both/Fire.tsx","svgs/filled/FilledDirect.tsx","components/modal/Modal.tsx","components/other/DropMenu.tsx","components/other/UserLoader.tsx","helpers/hooks/useWindowWidth.ts","helpers/other/get-users/getUsers.ts","svgs/empty/Close.tsx","svgs/empty/Direct.tsx","svgs/empty/Saved.tsx","svgs/empty/Smile.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport RoutesTypes from \"constants/routes-types\"\r\nimport { useAppSelector } from \"redux-setup/hooks\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProfileDropMenuContainer from \"./components/profile-drop-menu/ProfileDropMenuContainer\";\r\nimport DropMenu from \"components/other/DropMenu\";\r\nimport UsersSearchDropMenu from \"./components/search/UsersSearchDropMenu\";\r\nimport Home from \"svgs/both/Home\";\r\nimport Direct from \"svgs/empty/Direct\";\r\nimport useWindowWidth from \"helpers/hooks/useWindowWidth\";\r\nimport SearchBar from \"./components/search/SearchBar\";\r\nimport NewPost from \"svgs/both/NewPost\";\r\nimport Modal from \"components/modal/Modal\";\r\nimport NewPostModal from \"./components/new-post-modal/NewPostModal\";\r\nimport Fire from \"svgs/both/Fire\";\r\nimport FilledDirect from \"svgs/filled/FilledDirect\";\r\n\r\nenum MenuTypes{\r\n    NONE = \"\",\r\n    PROFILE = \"profile\",\r\n    SEARCH = \"search\",\r\n    NEW_POST = \"newPost\",\r\n}\r\n\r\nconst Header: React.FC = React.memo(() => {\r\n    const user = useAppSelector(state => state.signedUser.user);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [currentMenu, setCurrentMenu] = useState<MenuTypes>(MenuTypes.NONE);\r\n    const [wordEntering, setWordEntering] = useState<string>(\"\");\r\n\r\n    const innerWidth = useWindowWidth();\r\n    \r\n    useEffect(() => {\r\n        setCurrentMenu(MenuTypes.NONE);\r\n    }, [location])\r\n\r\n    const generateModal = () => {\r\n        switch (currentMenu) {\r\n            case MenuTypes.PROFILE: {\r\n                return (\r\n                    <DropMenu\r\n                        closeEvent={() => setCurrentMenu(MenuTypes.NONE)}\r\n                        styles=\"w-56 left-[-168px] top-11\"\r\n                    >\r\n                        <ProfileDropMenuContainer />\r\n                    </DropMenu>\r\n                )\r\n            }\r\n            case MenuTypes.NEW_POST: {\r\n                return (\r\n                    <Modal\r\n                        closeEvent={() => setCurrentMenu(MenuTypes.NONE)}\r\n                        styles=\"h-[500px] top-[14%] w-\"\r\n                    >\r\n                        <NewPostModal closeEvent={() => setCurrentMenu(MenuTypes.NONE)}/>\r\n                    </Modal>\r\n                )\r\n            }\r\n            default: {\r\n                return null;\r\n            }\r\n        }\r\n    }\r\n\r\n    const closeEvent = useCallback((event: any) => {\r\n        event.stopPropagation();\r\n        setCurrentMenu(MenuTypes.NONE)\r\n    }, [])\r\n\r\n    const setMenuToSearch = useCallback(() => {\r\n        setCurrentMenu(MenuTypes.SEARCH)\r\n    }, [])\r\n\r\n    const navigateToDashboard = useCallback(() => {\r\n        navigate(RoutesTypes.DASHBOARD)\r\n    }, [])\r\n\r\n    const navigateToDirect = useCallback(() => {\r\n        navigate(RoutesTypes.DIRECT)\r\n    }, [])\r\n\r\n    const setMenuToNewPost = useCallback(() => {\r\n        setCurrentMenu(MenuTypes.NEW_POST)\r\n    }, [])\r\n\r\n    const navigateToExplore = useCallback(() => {\r\n        navigate(RoutesTypes.EXPLORE)\r\n    }, [])\r\n\r\n    const setMenuToProfile = useCallback(() => {\r\n        setCurrentMenu(MenuTypes.PROFILE)\r\n    }, [])\r\n\r\n    return (\r\n        <header className=\"w-screen py-2 flex items-center justify-center border-b border-gray-200 bg-white\">\r\n            <div className=\"w-11/12 flex items-center justify-evenly\">\r\n                <Link to={RoutesTypes.DASHBOARD}>\r\n                    <img\r\n                        src={process.env.PUBLIC_URL + \"/images/instagram-logo.webp\"}\r\n                        className=\"h-10\"\r\n                    />\r\n                </Link>\r\n                {\r\n                    innerWidth > 640 ?\r\n                        <div className=\"w-64 h-9 relative\" onClick={setMenuToSearch}>\r\n                            <SearchBar\r\n                                wordEntering={wordEntering}\r\n                                setWordEntering={setWordEntering}\r\n                            />\r\n                            {\r\n                                currentMenu === MenuTypes.SEARCH ?\r\n                                    <DropMenu\r\n                                        closeEvent={closeEvent}\r\n                                        styles=\"w-[375px] top-12 left-[-65px] h-96 z-20\"\r\n                                    >\r\n                                        <UsersSearchDropMenu wordEntering={wordEntering} />\r\n                                    </DropMenu> :\r\n                                    null\r\n                            }\r\n                        </div> :\r\n                        null\r\n                }\r\n                <div className=\"flex gap-2 sm:gap-4\">\r\n                    <button onClick={navigateToDashboard}>\r\n                        <Home />\r\n                    </button>\r\n                    <button className=\"pb-1 mr-[-3px]\" onClick={navigateToDirect}>\r\n                        {\r\n                            location.pathname.includes(RoutesTypes.DIRECT) ?\r\n                                <FilledDirect styles=\"h-6 w-6 text-gray-800 rotate-[55deg]\" /> :\r\n                                <Direct\r\n                                    styles=\"h-6 w-6 text-gray-800 rotate-[55deg]\"\r\n                                    includeHovering={false}\r\n                                />\r\n                        }\r\n                    </button>\r\n                    <button onClick={setMenuToNewPost}>\r\n                        <NewPost isOpen={currentMenu === MenuTypes.NEW_POST} />\r\n                    </button>\r\n                    <button onClick={navigateToExplore}>\r\n                        <Fire />\r\n                    </button>\r\n                    <div className=\"relative flex items-center\">\r\n                        <button\r\n                            className=\"h-7 w-7 cursor-pointer rounded-full\"\r\n                            onClick={setMenuToProfile}\r\n                        >\r\n                            <img\r\n                                src={\r\n                                    user.profileImage.length ?\r\n                                        user.profileImage :\r\n                                        process.env.PUBLIC_URL + \"/images/default-avatar-image.jpg\"\r\n                                }\r\n                                className=\"rounded-full h-7 w-7 object-cover\"\r\n                            />\r\n                        </button>\r\n                        {generateModal()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n})\r\n\r\nexport default Header;","import React from 'react';\r\n\r\ntype DropMenuElementProps = {\r\n    image?: JSX.Element|JSX.Element[],\r\n    text: string,\r\n    callback: () => void,\r\n}\r\n\r\nconst ProfileDropMenuElement: React.FC<DropMenuElementProps> = React.memo(({ image, text, callback }) => {\r\n    return (\r\n        <button\r\n            className=\"flex w-full h-9 items-center justify-center \"\r\n            onClick={callback}\r\n        >\r\n            <div className=\"flex w-5/6 gap-3\">\r\n                {\r\n                    image ?\r\n                        image :\r\n                        null\r\n                }\r\n                <p className=\"text-gray-700 text-sm\">{text}</p>\r\n            </div>\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default ProfileDropMenuElement;","import React from 'react'\r\n\r\nconst Profile: React.FC<{ styles: string }> = ({ styles }) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ProfileRoutes from 'constants/profile-routes';\r\nimport RoutesTypes from 'constants/routes-types';\r\nimport { removeSignedUser } from 'redux-setup/features/signed-user/signedUser';\r\nimport { useAppDispatch, useAppSelector } from 'redux-setup/hooks';\r\nimport ProfileDropMenuElement from './ProfileDropMenuElement';\r\nimport { signOut } from 'firebase/auth';\r\nimport { auth } from 'firebase-setup/firebaseConfig';\r\nimport Profile from 'svgs/empty/Profile';\r\nimport Saved from 'svgs/empty/Saved';\r\n\r\nconst ProfileDropMenuContainer: React.FC = React.memo(() => {\r\n    const dispatch = useAppDispatch();\r\n    const user = useAppSelector(state => state.signedUser.user);\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogout = useCallback(async () => {\r\n        await signOut(auth);\r\n        dispatch(removeSignedUser());\r\n        navigate(RoutesTypes.LOGIN);\r\n    }, [auth])\r\n\r\n    const navigateToProfile = useCallback(() => {\r\n        navigate(RoutesTypes.DASHBOARD + user.userId)\r\n    }, [user.userId])\r\n\r\n    const navigateToSaved = useCallback(() => {\r\n        navigate(RoutesTypes.DASHBOARD + user.userId + \"/\" + ProfileRoutes.SAVED)\r\n    }, [user.userId])\r\n\r\n    return (\r\n        <>\r\n            <ProfileDropMenuElement\r\n                image={<Profile styles=\"h-5 w-5 text-gray-700\" />}\r\n                text=\"Profile\"\r\n                callback={navigateToProfile}\r\n            />\r\n            <ProfileDropMenuElement\r\n                image={(\r\n                    <Saved\r\n                        styles=\"h-5 w-5 text-gray-700\"\r\n                        includeHovering={false}\r\n                    />\r\n                )}\r\n                text=\"Saved\"\r\n                callback={navigateToSaved}\r\n            />\r\n            <div className=\"w-full border-t-2\"></div>\r\n            <ProfileDropMenuElement\r\n                text=\"Log Out\"\r\n                callback={handleLogout}\r\n            />\r\n            <div className=\"w-4 h-4 absolute bg-white rotate-45 top-[-8px] right-8 \"></div>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default ProfileDropMenuContainer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport RoutesTypes from 'constants/routes-types';\r\nimport UserSuggestionType from 'types/userSuggestionType';\r\n\r\nconst UserSearchElement: React.FC<UserSuggestionType> = React.memo(({ profileImage, username, fullName, userId }) => {\r\n    return (\r\n        <Link \r\n            className=\"flex h-13 mb-1 px-2 items-center py-1\"\r\n            to={RoutesTypes.DASHBOARD + userId}\r\n        >\r\n            <div className=\"w-full h-full py-[0.5px] gap-2 flex items-center\">\r\n                <img\r\n                    src={profileImage.length ? profileImage : process.env.PUBLIC_URL + \"/images/default-avatar-image.jpg\"}\r\n                    className=\"h-12 w-12 rounded-full object-cover\"\r\n                />\r\n                <div className=\"flex flex-col justify-center\">\r\n                    <p className=\"font-medium text-sm tracking-wide whitespace-nowrap\">{username}</p>\r\n                    <p className=\"text-gray-400 text-sm whitespace-nowrap\">{fullName}</p>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n})\r\n\r\nexport default UserSearchElement","import React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport UserSearchElement from './UserSearchElement'\r\nimport UserState from 'types/userStateType';\r\nimport getUsers from 'helpers/other/get-users/getUsers';\r\nimport UserLoader from 'components/other/UserLoader';\r\n\r\nconst UsersSearchDropMenu: React.FC<{ wordEntering: string }> = React.memo(({ wordEntering }) => {\r\n    const [usersInfo, setUsersInfo] = useState<UserState[]>([])\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(async () => {\r\n           await getUsers(wordEntering, setUsersInfo);\r\n        }, 300)\r\n\r\n        return () => clearTimeout(handler);\r\n    }, [wordEntering])\r\n\r\n    const generateSkeletons = useCallback(() => {\r\n        const skeletons = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            skeletons.push(\r\n                <UserLoader\r\n                    key={i}\r\n                    imageStyles={{ width: 40, height: 40, borderRadius: \"50%\" }}\r\n                    firstTextStyles={{ width: 160, height: 9, borderRadius: \"10px\" }}\r\n                    secondTextStyles={{ width: 140, height: 9, borderRadius: \"10px\" }}\r\n                />\r\n            );\r\n        }\r\n\r\n        return skeletons\r\n    }, [])\r\n\r\n    const generateElements = useMemo(() => usersInfo.map(doc => <UserSearchElement\r\n        {...doc}\r\n        key={doc.userId}\r\n    />), [usersInfo])\r\n\r\n    return (\r\n        <div className=\"flex flex-col w-full mt-2 overflow-hidden overflow-y-auto\">\r\n            {\r\n                usersInfo.length ?\r\n                    generateElements :\r\n                    generateSkeletons()\r\n            }\r\n            <div className=\"w-4 h-4 absolute bg-white rotate-45 top-[-8px] right-[180px]\"></div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UsersSearchDropMenu","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport RoutesTypes from 'constants/routes-types';\r\n\r\nconst Home: React.FC = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        location.pathname === RoutesTypes.DASHBOARD ?\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n            </svg> :\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst Search: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Search","import React, { useCallback, useRef } from 'react'\r\nimport Search from 'svgs/empty/Search';\r\n\r\ntype SearchBarProps = {\r\n    wordEntering: string, \r\n    setWordEntering: React.Dispatch<React.SetStateAction<string>> \r\n}\r\n\r\nconst SearchBar: React.FC<SearchBarProps> = React.memo(({ wordEntering, setWordEntering }) => {\r\n    const inputRef = useRef<any>();\r\n\r\n    const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setWordEntering(event.target.value)\r\n    }, [])\r\n\r\n    return (\r\n        <button\r\n            className=\"bg-gray-200 rounded-lg flex px-4 items-center h-full w-full\"\r\n        >\r\n            {\r\n                document.activeElement !== inputRef.current ?\r\n                    <Search /> :\r\n                    null\r\n            }\r\n            <input\r\n                className=\"w-full h-full bg-gray-200 rounded-lg placeholder:font-light placeholder:text-gray-400 relative\"\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                ref={inputRef}\r\n                value={wordEntering}\r\n                onChange={handleChange}\r\n            />\r\n        </button>\r\n    )\r\n})\r\n\r\nexport default SearchBar","import React from 'react'\r\n\r\nconst NewPost: React.FC<{ isOpen: boolean }> = ({ isOpen }) => {\r\n    return (\r\n        isOpen ?\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\" clipRule=\"evenodd\" />\r\n            </svg> :\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default NewPost","import React, { useCallback, useState } from 'react';\r\nimport { motion } from \"framer-motion\";\r\nimport useWindowWidth from 'helpers/hooks/useWindowWidth';\r\nimport Copy from 'svgs/empty/Copy';\r\nimport DropMenu from 'components/other/DropMenu';\r\n\r\ntype NewPostModalOneProps = { \r\n    image: any[], \r\n    setImage: React.Dispatch<React.SetStateAction<any[]>>,\r\n    setCurrentPageId: React.Dispatch<React.SetStateAction<number>>,\r\n}\r\n\r\nconst NewPostModalOne: React.FC<NewPostModalOneProps> = React.memo(({ \r\n    image, \r\n    setImage, \r\n    setCurrentPageId, \r\n}) => {\r\n    const [drag, setDrag] = useState<boolean>(false);\r\n    const [errorFileName, setErrorFileName] = useState<null | string>(null);\r\n    const innerWidth = useWindowWidth();\r\n\r\n    const incrementPageId = useCallback(() => {\r\n        setCurrentPageId(prevVal => prevVal + 1)\r\n    }, [])\r\n\r\n    const onDropHandler = useCallback((event: React.DragEvent<HTMLDivElement>) => {\r\n        event.preventDefault();\r\n\r\n        const file = event.dataTransfer.files[0]\r\n        if(file['type'].split('/')[0] !== 'image'){\r\n            setErrorFileName(file.name);\r\n            setDrag(false);\r\n            return;\r\n        }\r\n        \r\n        setImage(prevFiles => [...prevFiles, file])\r\n    }, [])\r\n\r\n    const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\r\n        const { files } = event.target\r\n        if (files && files[0]) {\r\n            setImage(prevFiles => [...prevFiles, files[0]]);\r\n        }\r\n    }, [])\r\n\r\n    const onDragStartHandler = useCallback((event: React.DragEvent<HTMLDivElement>) => {\r\n        event.preventDefault();\r\n        setDrag(true);\r\n    }, [])\r\n    \r\n    const onDragLeaveHandler = useCallback((event: React.DragEvent<HTMLDivElement>) => {\r\n        event.preventDefault();\r\n        setDrag(false);\r\n    }, [])\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"flex flex-col h-full w-[300px] sm:w-[450px]\"\r\n            {...(\r\n                image.length && innerWidth > 640 ?\r\n                    {\r\n                        initial: { width: \"640px\" },\r\n                        animate: { width: \"450px\" },\r\n                        transition: { duration: 0.3 },\r\n                    } :\r\n                    {}\r\n            )}\r\n        >\r\n            <div className=\"h-10 w-full flex justify-center items-center font-medium border-b relative\">\r\n                <p>{errorFileName ? \"File couldn't be uploaded\" : \"Create new post\"}</p>\r\n                {\r\n                    image.length ?\r\n                        <button\r\n                            className=\"absolute right-3 font-bold text-blue-500\"\r\n                            onClick={incrementPageId}\r\n                        >\r\n                            <p>Next</p>\r\n                        </button> :\r\n                        null\r\n                }\r\n            </div>\r\n            {\r\n                image.length ?\r\n                    <div className=\"h-[calc(100%-40px)] w-full bg-black rounded-b-xl\">\r\n                        <img\r\n                            src={URL.createObjectURL(image[0])}\r\n                            className=\"h-full w-full object-contain rounded-b-xl\"\r\n                        />\r\n                    </div> :\r\n                    <div\r\n                        className={`\r\n                            w-full h-full flex flex-col justify-center items-center gap-2 rounded-b-xl \r\n                            ${(drag || errorFileName) ? \"back\": \"\"}\r\n                        `}\r\n                        onDragStart={onDragStartHandler}\r\n                        onDragLeave={onDragLeaveHandler}\r\n                        onDragOver={onDragStartHandler}\r\n                        onDrop={onDropHandler}\r\n                    >\r\n                        <img\r\n                            src={\r\n                                errorFileName ?\r\n                                    process.env.PUBLIC_URL + \"/images/error.jpg\" :\r\n                                    drag ?\r\n                                        process.env.PUBLIC_URL + \"/images/create-post-drag.jpg\" :\r\n                                        process.env.PUBLIC_URL + \"/images/create-post.jpg\"\r\n                            }\r\n                            className={drag ? \"w-[106px]\" : \"w-[100px]\"}\r\n                        />\r\n                        <p className=\"text-xl sm:text-2xl font-thin\">\r\n                            {errorFileName ? \"This file is not supported\" : \"Drag photos and videos here\"}\r\n                        </p>\r\n                        {\r\n                            errorFileName ?\r\n                                <div className=\"flex w-5/6 text-center gap-1 justify-center\">\r\n                                    <p className=\"text-gray-400 text-sm font-bold\">{errorFileName}</p>\r\n                                    <p className=\"text-gray-400 text-sm\"> could not be uploaded.</p>\r\n                                </div> :\r\n                                null\r\n                        }\r\n                        <label\r\n                            className=\"mt-3 py-1 px-3 bg-blue-500 font-medium text-white rounded cursor-pointer text-sm tracking-wide flex items-center\"\r\n                        >\r\n                            <input\r\n                                type=\"file\"\r\n                                accept=\"image/png, image/jpg, image/jpeg\"\r\n                                className=\"hidden\"\r\n                                onChange={handleChange}\r\n                            />\r\n                            <p>{errorFileName ? \"Select other files\" : \"Select from computer\"}</p>\r\n                        </label>\r\n                    </div>\r\n            }\r\n        </motion.div>\r\n    )\r\n})\r\n\r\nexport default NewPostModalOne","import React from 'react'\r\n\r\nconst ReturnBack: React.FC = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default ReturnBack","import React, { useCallback, useState } from 'react';\r\nimport ReturnBack from 'svgs/empty/ReturnBack';\r\nimport { motion } from \"framer-motion\";\r\nimport useWindowWidth from \"helpers/hooks/useWindowWidth\";\r\nimport { useAppDispatch, useAppSelector } from 'redux-setup/hooks';\r\nimport Smile from 'svgs/empty/Smile';\r\nimport DropMenu from 'components/other/DropMenu';\r\nimport Picker, { IEmojiData } from 'emoji-picker-react'\r\nimport addNewPost from \"redux-setup/features/signed-user/thunks/addNewPost\";\r\n\r\ntype NewPostModalTwoProps = {\r\n    setCurrentPageId: React.Dispatch<React.SetStateAction<number>>,\r\n    image: any[],\r\n}\r\n\r\nconst NewPostModalTwo: React.FC<NewPostModalTwoProps> = React.memo(({ setCurrentPageId, image }) => {\r\n    const user = useAppSelector(state => state.signedUser.user);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const innerWidth = useWindowWidth();\r\n    const [text, setText] = useState<string>(\"\");\r\n\r\n    const [areEmojiOpen, setAreEmojiOpen] = useState<boolean>(false);\r\n\r\n    const decrementPageId = useCallback(() => {\r\n        setCurrentPageId(prevVal => prevVal - 1)\r\n    }, [])\r\n\r\n    const createPost = useCallback(() => {\r\n        dispatch(addNewPost({ image, text }))\r\n        setCurrentPageId(prevVal => prevVal + 1);\r\n    }, [image, text])\r\n\r\n    const handleEmojiClick = useCallback((event: React.MouseEvent<Element, MouseEvent>, emojiObject: IEmojiData) => {\r\n        setText(prevText => prevText + emojiObject.emoji);\r\n    }, [])\r\n\r\n    const closeEvent = useCallback((event: any) => {\r\n        event.stopPropagation();\r\n        setAreEmojiOpen(false)\r\n    }, [])\r\n\r\n    const handleTextChange = useCallback((event: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setText(event.target.value)\r\n    }, [])\r\n\r\n    const toggleEmojisOpen = useCallback(() => {\r\n        setAreEmojiOpen(prevVal => !prevVal)\r\n    }, [])\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"flex flex-col h-full w-[300px] sm:w-[640px]\"\r\n            {...(\r\n                innerWidth > 640 ?\r\n                    {\r\n                        initial: { width: \"450px\" },\r\n                        animate: { width: \"640px\" },\r\n                        exit: {width: \"450px\"},\r\n                        transition: { duration: 0.3 },\r\n                    } :\r\n                    {}\r\n            )}\r\n        >\r\n            <div className=\"h-10 w-full flex justify-center items-center font-medium border-b relative\">\r\n                <div className=\"w-full h-12 flex justify-between items-center px-4\">\r\n                    <button onClick={decrementPageId}>\r\n                        <ReturnBack />\r\n                    </button>\r\n                    <p>Create new post</p>\r\n                    <button\r\n                        className=\"font-bold text-blue-500\"\r\n                        onClick={createPost}\r\n                    >\r\n                        <p>Share</p>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"w-full h-full flex flex-col sm:flex-row\">\r\n                <div className=\"relative bg-black sm:rounded-bl-xl\">\r\n                    <img\r\n                        src={URL.createObjectURL(image[0])}\r\n                        className=\"h-[225px] sm:h-[460px] w-[450px] sm:rounded-bl-xl object-contain\"\r\n                    />\r\n                    {\r\n                        areEmojiOpen ?\r\n                                <DropMenu\r\n                                    closeEvent={closeEvent}\r\n                                    styles=\"w-[calc(100%-10px)] sm:w-[250px] bottom-[calc(100%-221px)] right-[5px] sm:right-[2px] sm:bottom-[225px] h-[217px] sm:h-[233px] z-20 \"\r\n                                    noAnimation={true}\r\n                                >\r\n                                    <Picker\r\n                                        pickerStyle={{ width: \"100%\", height: \"100%\" }}\r\n                                        onEmojiClick={handleEmojiClick}\r\n                                    />\r\n                                </DropMenu>:\r\n                            null\r\n                    }\r\n                </div>\r\n                <motion.div \r\n                    className=\"flex flex-col w-full h-[calc(100%-40px)] sm:border-l overflow-hidden\"\r\n                    {...(\r\n                        innerWidth > 640 ?\r\n                            {\r\n                                initial: { width: \"0px\" },\r\n                                animate: { width: \"190px\" },\r\n                                transition: { duration: 0.3 },\r\n                            } :\r\n                            {}\r\n                    )}\r\n                >\r\n                    <div\r\n                        className=\"w-full h-14 py-[0.5px] gap-2 flex items-center px-3\"\r\n                    >\r\n                        <img\r\n                            src={\r\n                                user.profileImage.length ?\r\n                                    user.profileImage :\r\n                                    process.env.PUBLIC_URL + \"/images/default-avatar-image.jpg\"\r\n                            }\r\n                            className=\"h-9 w-9 rounded-full object-cover\"\r\n                        />\r\n                        <p className=\"font-medium text-sm tracking-wide whitespace-nowrap\">{user.username}</p>\r\n                    </div>\r\n                    <textarea\r\n                        className=\"resize-none h-36 overflow-hidden overflow-y-auto px-3 focus:outline-none text-sm text-sm\"\r\n                        placeholder='Write a caption...'\r\n                        onChange={handleTextChange}\r\n                        value={text}\r\n                    />\r\n                    <div className=\"w-full flex justify-between sm:border-b px-2 pb-2\">\r\n                        <button\r\n                            className=\"h-full flex items-center\"\r\n                            onClick={toggleEmojisOpen}\r\n                        >\r\n                            <Smile styles=\"w-6 h-6 text-gray-400\"/>\r\n                        </button>\r\n                        <p className=\"text-gray-400 text-sm\">{text.length}\\200</p>\r\n                    </div>\r\n                </motion.div>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n})\r\n\r\nexport default NewPostModalTwo","import React, { useEffect, useState } from 'react'\r\nimport NewPostModalOne from 'components/header/components/new-post-modal/NewPostModalOne';\r\nimport NewPostModalTwo from 'components/header/components/new-post-modal/NewPostModalTwo';\r\n\r\ntype NewPostModalProps = {\r\n    closeEvent: () => void\r\n}\r\n\r\nconst NewPostModal: React.FC<NewPostModalProps> = React.memo(({ closeEvent }) => {\r\n    const [currentPageId, setCurrentPageId] = useState<number>(0);\r\n    const [image, setImage] = useState<any[]>([]);\r\n\r\n    useEffect(() => {\r\n        if(currentPageId === 2){\r\n            closeEvent();\r\n        }\r\n    }, [currentPageId])\r\n\r\n    const generatePages = () => {\r\n        switch (currentPageId) {\r\n            case 0: {\r\n                return (\r\n                    <NewPostModalOne\r\n                        image={image}\r\n                        setImage={setImage}\r\n                        setCurrentPageId={setCurrentPageId}\r\n                    />\r\n                )\r\n            }\r\n            case 1: {\r\n                return (\r\n                    <NewPostModalTwo \r\n                        setCurrentPageId={setCurrentPageId}\r\n                        image={image}\r\n                    />\r\n                )\r\n            }\r\n            default: {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {generatePages()}\r\n        </>\r\n    )\r\n})\r\n\r\nexport default NewPostModal\r\n","import RoutesTypes from 'constants/routes-types';\r\nimport React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst Fire: React.FC = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        location.pathname.includes(RoutesTypes.EXPLORE) ?\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                <path fillRule=\"evenodd\" d=\"M12.395 2.553a1 1 0 00-1.45-.385c-.345.23-.614.558-.822.88-.214.33-.403.713-.57 1.116-.334.804-.614 1.768-.84 2.734a31.365 31.365 0 00-.613 3.58 2.64 2.64 0 01-.945-1.067c-.328-.68-.398-1.534-.398-2.654A1 1 0 005.05 6.05 6.981 6.981 0 003 11a7 7 0 1011.95-4.95c-.592-.591-.98-.985-1.348-1.467-.363-.476-.724-1.063-1.207-2.03zM12.12 15.12A3 3 0 017 13s.879.5 2.5.5c0-1 .5-4 1.25-4.5.5 1 .786 1.293 1.371 1.879A2.99 2.99 0 0113 13a2.99 2.99 0 01-.879 2.121z\" clipRule=\"evenodd\" />\r\n            </svg> :\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-7 w-7 text-gray-800\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M17.657 18.657A8 8 0 016.343 7.343S7 9 9 10c0-2 .5-5 2.986-7C14 5 16.09 5.777 17.656 7.343A7.975 7.975 0 0120 13a7.975 7.975 0 01-2.343 5.657z\" />\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9.879 16.121A3 3 0 1012.015 11L11 14H9c0 .768.293 1.536.879 2.121z\" />\r\n            </svg>\r\n    )\r\n}\r\n\r\nexport default Fire","import React from 'react'\r\n\r\ntype Props = {}\r\n\r\nconst FilledDirect: React.FC<{ styles: string }> = ({ styles }) => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className={styles}\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n        >\r\n            <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default FilledDirect","import React, { useCallback, useEffect } from 'react'\r\nimport { motion } from 'framer-motion';\r\nimport Close from 'svgs/empty/Close';\r\n\r\ntype ModalProps = {\r\n    children: React.ReactNode;\r\n    closeEvent: () => void;\r\n    styles: string\r\n}\r\n\r\nconst Modal: React.FC<ModalProps> = React.memo(({ children, closeEvent, styles }) => {\r\n    useEffect(() => {\r\n        document.body.classList.add(\"overflow-hidden\");\r\n        return () => document.body.classList.remove(\"overflow-hidden\");\r\n    }, [])\r\n\r\n    const clickHandler = useCallback((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        event.stopPropagation()\r\n        closeEvent()\r\n    }, [])\r\n\r\n    const stopPropagation = useCallback((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        event.stopPropagation()\r\n    }, [])\r\n\r\n    return (\r\n        <div\r\n            className=\"w-screen h-screen bg-[rgba(0,0,0,0.6)] fixed top-0 left-0 flex items-center justify-center z-50\"\r\n            onClick={clickHandler}\r\n        >\r\n            <motion.div\r\n                className={`${styles.includes(\"w-\") ? \"\" : \"w-64 sm:w-96\"} absolute flex flex-col bg-white rounded-xl z-50 ${styles}`}\r\n                initial={{ scale: 1.2 }}\r\n                animate={{ scale: 1 }}\r\n                transition={{ duration: 0.12 }}\r\n                onClick={stopPropagation}\r\n            >\r\n                {children}\r\n            </motion.div>\r\n            <div className=\"absolute top-4 right-4 cursor-pointer\">\r\n                <Close styles=\"w-[25px] h-[25px] text-white\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Modal","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ntype DropMenuProps = {\r\n  children: React.ReactNode;\r\n  closeEvent: (() => void) | ((event: any) => void);\r\n  styles: string;\r\n  noAnimation?: boolean;\r\n}\r\n\r\nconst DropMenu: React.FC<DropMenuProps> = React.memo(({ children, closeEvent, styles, noAnimation }) => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"w-screen h-screen fixed top-0 left-0\"\r\n        onClick={closeEvent}\r\n      ></div>\r\n      <motion.div\r\n        className={`bg-white flex items-center rounded-lg drop-shadow-md absolute flex-col z-50 ${styles}`}\r\n        {...(\r\n          !noAnimation ?\r\n            {\r\n              initial: { y: -50 },\r\n              animate: { y: 0 },\r\n              exit: { y: 50 }\r\n            } :\r\n            {}\r\n        )}\r\n      >\r\n        {children}\r\n      </motion.div>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default DropMenu","import React from 'react';\r\nimport { RectShape } from 'react-placeholder/lib/placeholders';\r\n\r\ntype UserLoaderType = {\r\n    imageStyles: object, \r\n    firstTextStyles: object,\r\n    secondTextStyles: object,\r\n    margin?: string,\r\n}\r\n\r\nconst UserLoader: React.FC<UserLoaderType> = React.memo(({ imageStyles, firstTextStyles, secondTextStyles, margin }) => {\r\n    return (\r\n        <div className={`flex px-[2px] pr-6 items-center justify-center py-1 ${margin ? margin: \"\"}`}>\r\n            <div className=\"w-full py-[0.5px] flex items-center px-3\">\r\n                <RectShape color=\"#E5E7EB\" style={imageStyles} />\r\n                <div className=\"w-[calc(100%-70px)] mt-1 gap-2 h-5/6 flex flex-col justify-center\">\r\n                    <RectShape color=\"#E5E7EB\" style={firstTextStyles} />\r\n                    <RectShape color=\"#E5E7EB\" style={secondTextStyles} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default UserLoader","import { useEffect, useState } from 'react'\r\n\r\nconst useWindowWidth = () => {\r\n    const [innerWidth, setInnerWidth] = useState(window.innerWidth)\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setInnerWidth(window.innerWidth)\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize)\r\n    }, [])\r\n\r\n    return innerWidth;\r\n}\r\n\r\nexport default useWindowWidth","import { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { db } from \"firebase-setup/firebaseConfig\";\r\nimport UserState from \"types/userStateType\";\r\n\r\nconst getUsers = async (\r\n    wordEntering: string,\r\n    setUsersInfo: React.Dispatch<React.SetStateAction<UserState[]>>\r\n) => {\r\n    if (wordEntering.length === 0) {\r\n        setUsersInfo([]);\r\n        return;\r\n    }\r\n\r\n    const usersRef = collection(db, \"users\");\r\n    const q = query(usersRef, where(\"username\", \">=\", wordEntering), where(\"username\", \"<=\", wordEntering + \"~\"));\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    setUsersInfo(querySnapshot.docs.map(doc => doc.data()) as UserState[])\r\n}\r\n\r\nexport default getUsers;","import React from 'react'\r\n\r\nconst Close: React.FC<{ styles: string }> = ({ styles }) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Close","import React, { useState } from 'react'\r\n\r\nconst Direct: React.FC<{ styles: string, includeHovering: boolean }> = ({ styles, includeHovering }) => {\r\n    const [isHovered, setIsHovered] = useState<boolean>(false);\r\n\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className={`${styles} ${includeHovering && isHovered && \"text-gray-500\"}`}\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            strokeWidth={2}\r\n            onMouseEnter={() => setIsHovered(true)}\r\n            onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Direct","import React, { useState } from 'react'\r\n\r\nconst Saved: React.FC<{ styles: string, includeHovering: boolean }> = ({ styles, includeHovering }) => {\r\n    const [isHovered, setIsHovered] = useState<boolean>(false);\r\n\r\n    return (\r\n        <svg \r\n            xmlns=\"http://www.w3.org/2000/svg\" \r\n            className={`${styles} ${includeHovering && isHovered && \"text-gray-500\"}`} \r\n            fill=\"none\" \r\n            viewBox=\"0 0 24 24\" \r\n            stroke=\"currentColor\" \r\n            strokeWidth={2}\r\n            onMouseEnter={() => setIsHovered(true)}\r\n            onMouseLeave={() => setIsHovered(false)}\r\n        >\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Saved","import React from 'react'\r\n\r\nconst Smile: React.FC<{ styles: string }> = ({ styles }) => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className={styles} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Smile"],"names":["MenuTypes","React","image","text","callback","className","onClick","styles","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","dispatch","useAppDispatch","user","useAppSelector","state","signedUser","navigate","useNavigate","handleLogout","useCallback","signOut","auth","removeSignedUser","RoutesTypes","navigateToProfile","userId","navigateToSaved","ProfileRoutes","Saved","includeHovering","profileImage","username","fullName","to","src","length","process","wordEntering","useState","usersInfo","setUsersInfo","useEffect","handler","setTimeout","getUsers","clearTimeout","generateSkeletons","skeletons","i","push","UserLoader","imageStyles","width","height","borderRadius","firstTextStyles","secondTextStyles","generateElements","useMemo","map","doc","key","useLocation","pathname","setWordEntering","inputRef","useRef","handleChange","event","target","value","document","activeElement","current","type","placeholder","ref","onChange","isOpen","fillRule","clipRule","setImage","setCurrentPageId","drag","setDrag","errorFileName","setErrorFileName","innerWidth","useWindowWidth","incrementPageId","prevVal","onDropHandler","preventDefault","file","dataTransfer","files","split","name","prevFiles","onDragStartHandler","onDragLeaveHandler","motion","initial","animate","transition","duration","URL","createObjectURL","onDragStart","onDragLeave","onDragOver","onDrop","accept","setText","areEmojiOpen","setAreEmojiOpen","decrementPageId","createPost","addNewPost","handleEmojiClick","emojiObject","prevText","emoji","closeEvent","stopPropagation","handleTextChange","toggleEmojisOpen","exit","DropMenu","noAnimation","pickerStyle","onEmojiClick","Smile","currentPageId","generatePages","includes","location","NONE","currentMenu","setCurrentMenu","setMenuToSearch","SEARCH","navigateToDashboard","navigateToDirect","setMenuToNewPost","NEW_POST","navigateToExplore","setMenuToProfile","PROFILE","Direct","Modal","generateModal","children","body","classList","add","remove","clickHandler","scale","y","margin","color","style","window","setInnerWidth","addEventListener","usersRef","collection","db","q","query","where","getDocs","querySnapshot","docs","data","isHovered","setIsHovered","onMouseEnter","onMouseLeave"],"sourceRoot":""}